trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  projectName: 'example-javascript-vulnerable-methods'
  # Nota: VERACODE_SCA_TOKEN deve ser configurado como variável secreta no Azure DevOps

steps:
# 1. Instalar Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Instalar Node.js'

# 2. Instalar dependências
- script: npm install
  displayName: 'Instalar dependências'

# 3. Rodar o build
- script: npm run build
  displayName: 'Executar build'

# 4. Verificar criação da pasta dist
- script: |
    ls -la dist || echo "A pasta dist não foi criada corretamente"
  displayName: 'Verificar pasta dist'
  condition: always()

# 5. Empacotar a build
- task: ArchiveFiles@2
  displayName: 'Empacotar artefato de build'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(projectName)-sca.zip'
    replaceExistingArchive: true

# 6. Publicar artefato para uso em outros stages/jobs
- task: PublishBuildArtifacts@1
  displayName: 'Publicar artefato'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(projectName)-sca.zip'
    ArtifactName: 'veracode-sca-scan'

# 7. Opção 1: Rodar Veracode SCA Agent diretamente na pasta dist
- script: |
    export SRCCLR_API_TOKEN=$(VERACODE_SCA_TOKEN)
    export JAVA_TOOL_OPTIONS="-Xmx4096m"
    cd $(System.DefaultWorkingDirectory)/dist
    curl -sSL -k https://download.sourceclear.com/ci.sh | bash -s -- scan --allow-dirty
  displayName: 'Rodar Veracode SCA Agent Analysis na pasta dist'
  env:
    VERACODE_SCA_TOKEN: $(VERACODE_SCA_TOKEN)

# Opção 2 (comentada): Se precisar extrair o artefato publicado (em jobs ou stages diferentes)
# - task: ExtractFiles@1
#   displayName: 'Extrair artefato para análise SCA'
#   inputs:
#     archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/$(projectName)-sca.zip'
#     destinationFolder: '$(System.ArtifactsDirectory)/sca-scan-extracted'
#     cleanDestinationFolder: true
# 
# - script: |
#     export SRCCLR_API_TOKEN=$(VERACODE_SCA_TOKEN)
#     export JAVA_TOOL_OPTIONS="-Xmx4096m"
#     cd $(System.ArtifactsDirectory)/sca-scan-extracted
#     curl -sSL -k https://download.sourceclear.com/ci.sh | bash -s -- scan --allow-dirty
#   displayName: 'Rodar Veracode SCA Agent Analysis'
#   env:
#     VERACODE_SCA_TOKEN: $(VERACODE_SCA_TOKEN)